{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SACAC,QAAQC,IAAIC,EAAAJ,IAIY,MAAlBK,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBA0BxC,SAASI,EAAcC,EAAUC,GACb,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,IAIVS,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBjB,EAAAJ,GAASuB,OAAOC,QAAQ,qBAAqBJ,QAAeC,MAAU,IAEvEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBjB,EAAAJ,GAASuB,OAAOG,QAAQ,oBAAoBN,QAAeC,MAAU,G,CAzCrDhB,EAAjBsB,iBAAiB,UAGG,SAAHC,GACpBA,EAAMC,iBACN,MAAMC,EAAaC,OAAO,GAAGvB,EAAQwB,SAC/BC,EAAYF,OAAO,GAAGtB,EAAOuB,SAC7BE,EAAeH,OAAO,GAAGrB,EAASsB,SAMxC,IAAIG,EAAeL,EACnB,IAAK,IAAIM,EAAI,EAAGA,EAAIF,EAAcE,GAAK,EAChB,IAAjBD,IACFA,GAAgBF,GAElBtB,EAAcyB,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["//імпортуємо бібліотеку\nimport Notiflix from 'notiflix';;\nconsole.log(Notiflix);\n//import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// отримуємо доступ до інпутів\nconst form = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\n//додаємо слухача на кнопку\nform.addEventListener('submit', onFormSubmit);\n\n//функція підрахунку затримки\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(`${delayEl.value}`);\n  const stepDelay = Number(`${stepEl.value}`);\n  const promiseCount = Number(`${amountEl.value}`);\n  \n  //console.log(firstDelay);\n  //console.log(stepDelay);\n  //console.log(promiseCount);\n\n  let currentDelay = firstDelay;\n  for (let i = 0; i < promiseCount; i += 1) {\n    if (currentDelay !== 0) {\n      currentDelay += stepDelay;\n    }\n    createPromise(i + 1, currentDelay);\n  }\n};\n\n//функція створення промісів\nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$7Y9D8","parcelRequire","console","log","$parcel$interopDefault","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","Notify","success","catch","failure","addEventListener","event","preventDefault","firstDelay","Number","value","stepDelay","promiseCount","currentDelay","i"],"version":3,"file":"03-promises.93d883d7.js.map"}